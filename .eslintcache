[{"E:\\React\\upwork\\src\\index.js":"1","E:\\React\\upwork\\src\\App.js":"2","E:\\React\\upwork\\src\\reportWebVitals.js":"3","E:\\React\\upwork\\src\\components\\addCard.js":"4","E:\\React\\upwork\\src\\components\\bidCard.js":"5","E:\\React\\upwork\\src\\components\\bidFlipCard.js":"6","E:\\React\\upwork\\src\\components\\items.js":"7","E:\\React\\upwork\\src\\store\\configureStore.js":"8","E:\\React\\upwork\\src\\reducers\\cardsReducer.js":"9","E:\\React\\upwork\\src\\actions\\actionTypes.js":"10","E:\\React\\upwork\\src\\reducers\\initialStates.js":"11","E:\\React\\upwork\\src\\actions\\actions.js":"12","E:\\React\\upwork\\src\\pages\\dashboard.js":"13","E:\\React\\upwork\\src\\services\\emitter.js":"14","E:\\React\\upwork\\src\\actions\\actionParams.js":"15"},{"size":600,"mtime":1613745985391,"results":"16","hashOfConfig":"17"},{"size":201,"mtime":1613810038032,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1613725938418,"results":"19","hashOfConfig":"17"},{"size":5097,"mtime":1613827780080,"results":"20","hashOfConfig":"17"},{"size":509,"mtime":1613749343955,"results":"21","hashOfConfig":"17"},{"size":1160,"mtime":1613823213869,"results":"22","hashOfConfig":"17"},{"size":2927,"mtime":1613829422876,"results":"23","hashOfConfig":"17"},{"size":243,"mtime":1613724062772,"results":"24","hashOfConfig":"17"},{"size":1232,"mtime":1613753250697,"results":"25","hashOfConfig":"17"},{"size":124,"mtime":1613753270105,"results":"26","hashOfConfig":"17"},{"size":0,"mtime":1613725379994,"results":"27","hashOfConfig":"17"},{"size":287,"mtime":1613753281832,"results":"28","hashOfConfig":"17"},{"size":2329,"mtime":1613810399105,"results":"29","hashOfConfig":"17"},{"size":382,"mtime":1613731946779,"results":"30","hashOfConfig":"17"},{"size":27,"mtime":1613826551907,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1o1q9vt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\React\\upwork\\src\\index.js",[],["67","68"],"E:\\React\\upwork\\src\\App.js",[],"E:\\React\\upwork\\src\\reportWebVitals.js",[],"E:\\React\\upwork\\src\\components\\addCard.js",["69","70"],"import React from 'react'\r\nimport { Button, Modal, Input, Row, Col } from 'antd'\r\nimport { FaCentercode, FaPlus } from 'react-icons/fa'\r\nimport {setItems, updateTimer} from '../actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport '../App.css'\r\nimport * as params from '../actions/actionParams'\r\n\r\nclass addCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      file: null,\r\n      storeName: \"\",\r\n      invoicePrice: 0,\r\n      imagePreviewUrl: '',\r\n      imageSize: '100%',\r\n      visible: false,\r\n      timerFlag: false,\r\n      modalStyle: {\r\n        textAlign: 'center',\r\n        marginBottom: 20\r\n      }\r\n    }\r\n    this.showModal = this.showModal.bind(this);\r\n    this.submitCard = this.submitCard.bind(this);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({\r\n      visible: false,\r\n      file: null,\r\n      invoicePrice: 0,\r\n      imagePreviewUrl: '',\r\n      storeName: ''\r\n    });\r\n  };\r\n\r\n  _handleSubmit(e) {\r\n    e.preventDefault();\r\n    // TODO: do something with -> this.state.file\r\n    console.log('handle uploading-', this.state.file);\r\n  }\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  storeChange= (e) => {\r\n    this.setState({ storeName: e.target.value });\r\n  };\r\n\r\n  priceChange= (e) => {\r\n    this.setState({ invoicePrice: e.target.value });\r\n  };\r\n\r\n  submitCard = () => {\r\n    if(this.state.storeName === '' || this.state.invoicePrice === 0) {\r\n      alert(\"Please Input Correctly\")\r\n    }\r\n    else {\r\n      this.props.setItems({\r\n        id: 1,\r\n        name: this.state.storeName,\r\n        price: this.state.invoicePrice,\r\n        top: 0,\r\n        time: params.DELAY_TIME,\r\n        image: this.state.imagePreviewUrl,\r\n        endStatus: false\r\n      })\r\n      this.setState({\r\n        visible: false,\r\n        file: null,\r\n        invoicePrice: 0,\r\n        imagePreviewUrl: '',\r\n        storeName: ''\r\n      });\r\n      if(this.state.timerFlag === false) {\r\n        setInterval( () => {\r\n          if( this.props.items ) {\r\n            for(let i = 0; i < this.props.items.length; i++) {\r\n              if(this.props.items[i].time > 0) {\r\n                this.props.items[i].time --\r\n                this.props.updateTimer({\r\n                  id: this.props.items[i].id,\r\n                  time: this.props.items[i].time\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }, 1000)\r\n        this.setState({\r\n          timerFlag: true \r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {imagePreviewUrl} = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} style={{width: this.state.imageSize}} alt=\"ImagePreview\"/>);\r\n    } else {\r\n      $imagePreview = (<p>QR CODE PREVIEW</p>);\r\n    }\r\n\r\n    return(\r\n      <div className=\"cardBox\">\r\n        <div className=\"addBtn\" onClick={this.showModal}>\r\n          <span><FaPlus /></span>\r\n        </div>\r\n        <Modal\r\n            visible={this.state.visible}\r\n            onCancel={this.hideModal}\r\n            footer={null}\r\n            width={700}\r\n            bodyStyle={{padding: 50}}\r\n            >\r\n              <Row gutter={24, 24}>\r\n                <Col span={12} sm={24} md={12} xs={24} style={this.state.modalStyle}>\r\n                  <div className=\"uploadSide\">\r\n                    <h1 className=\"uploadTitle\">UPLOAD</h1>\r\n                    <Input className=\"storeEdit\" size=\"large\" placeholder=\"ENTER STORE NAME\" onChange={ this.storeChange } value={this.state.storeName}/>\r\n                    <Input className=\"priceEdit\" size=\"large\" placeholder=\"ENTER INVOICE PRICE\" onChange={ this.priceChange } value={this.state.invoicePrice}/>\r\n                    <Button type=\"default\" shape=\"round\" className=\"submitBtn\" onClick={this.submitCard}>SUBMIT</Button>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12} style={this.state.modalStyle} xs={24} sm={24} md={12}>\r\n                  <div className=\"previewComponent\">\r\n                    <div className=\"imgPreview\">\r\n                        {$imagePreview}\r\n                    </div>\r\n                    <form onSubmit={(e)=>this._handleSubmit(e)}>\r\n                        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">SELECT QR CODE</label>\r\n                        <input id=\"file-upload\" type=\"file\" onChange={(e)=>this._handleImageChange(e)}/>\r\n                    </form>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setItems,\r\n  updateTimer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(addCard);","E:\\React\\upwork\\src\\components\\bidCard.js",[],"E:\\React\\upwork\\src\\components\\bidFlipCard.js",[],"E:\\React\\upwork\\src\\components\\items.js",["71"],"E:\\React\\upwork\\src\\store\\configureStore.js",[],"E:\\React\\upwork\\src\\reducers\\cardsReducer.js",["72"],"import * as types from '../actions/actionTypes'\r\n\r\nconst getNewID = items => {\r\n    var maxID = 0\r\n    for(var i = 0; i < items.length; i++) {\r\n        if( maxID < items[i].id ) {\r\n            maxID = items[i].id\r\n        }\r\n    }\r\n\r\n    return maxID + 1\r\n}\r\n\r\nconst cardsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case types.SET_ITEMS: {\r\n            action.data.id = getNewID(state)\r\n            return [\r\n                ...state,\r\n                action.data\r\n            ]\r\n        }\r\n        case types.UPDATE_ITEMS: {\r\n            let item = state.filter( (val) => {\r\n                return val.id === action.data.id\r\n            })\r\n            \r\n            if( item.length > 0 && item[0].top < action.data.top ) {\r\n                item[0].top = action.data.top\r\n            } \r\n            return [ ...state ]\r\n        }\r\n        case types.UPDATE_TIMER: {\r\n            let item = state.filter( (val) => {\r\n                return val.id === action.data.id\r\n            })\r\n            \r\n            if( item.length > 0 && item[0].time > 0 ) {\r\n                item[0].time = action.data.time\r\n            } \r\n            return [ ...state ]\r\n        }\r\n    }\r\n}\r\n\r\nexport default cardsReducer","E:\\React\\upwork\\src\\actions\\actionTypes.js",[],"E:\\React\\upwork\\src\\reducers\\initialStates.js",["73"],"E:\\React\\upwork\\src\\actions\\actions.js",[],"E:\\React\\upwork\\src\\pages\\dashboard.js",["74"],"import React from 'react';\r\nimport '../App.css';\r\nimport AddCard from '../components/addCard.js';\r\nimport Item from '../components/items.js';\r\nimport { Row, Col, Button } from 'antd';\r\nimport {setItems, updateTimer} from '../actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport * as params from '../actions/actionParams'\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            marginStyle: {\r\n                marginBottom: 20\r\n            }\r\n        }\r\n        this.resetTimer = this.resetTimer.bind(this)\r\n    }\r\n\r\n    resetTimer = () => {\r\n        if( this.props.items ) {\r\n            for(let i = 0; i < this.props.items.length; i++) {\r\n                this.props.items[i].time = params.DELAY_TIME\r\n                this.props.updateTimer({\r\n                    id: this.props.items[i].id,\r\n                    time: this.props.items[i].time,\r\n                    endStatus: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { items } = this.props\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Button onClick={this.resetTimer} className=\"resetBtn\">RESET</Button>\r\n                <h1>MyStore</h1>\r\n                <Row gutter={24, 24}>\r\n                    <Col span={24} style={this.state.marginStyle} sm={24} md={12} lg={8}>\r\n                        <AddCard></AddCard>\r\n                    </Col>\r\n                    {items && items.map((item) => {\r\n                        let realTime = item.time + \" SECONDS\"\r\n                        if(item.time > 60) realTime = (item.time / 60).toFixed(0) + \" MINS\"\r\n                        return (\r\n                            <Col key={item.id} span={24} sm={24} md={12} lg={8} style={this.state.marginStyle}>\r\n                                <Item id={item.id} price={item.price} name={item.name} top={item.top} time={realTime} endStatus={item.endStatus}></Item>\r\n                            </Col>\r\n                    )})}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\nconst mapStateToProps = state => {\r\n    return {\r\n        items: state,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setItems,\r\n    updateTimer\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","E:\\React\\upwork\\src\\services\\emitter.js",[],["75","76"],"E:\\React\\upwork\\src\\actions\\actionParams.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":138,"column":30,"nodeType":"87","messageId":"88","endLine":138,"endColumn":31},{"ruleId":"89","severity":1,"message":"90","line":58,"column":13,"nodeType":"91","endLine":58,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":15,"column":5,"nodeType":"94","messageId":"95","endLine":43,"endColumn":6},{"ruleId":"96","severity":1,"message":"97","line":1,"column":1,"nodeType":"98","endLine":5,"endColumn":2},{"ruleId":"85","severity":1,"message":"86","line":41,"column":32,"nodeType":"87","messageId":"88","endLine":41,"endColumn":33},{"ruleId":"77","replacedBy":"99"},{"ruleId":"79","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'FaCentercode' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["101"],["102"],"no-global-assign","no-unsafe-negation"]